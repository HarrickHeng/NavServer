// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto_C2WS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HHFramework.Proto {

  /// <summary>Holder for reflection information generated from Proto_C2WS.proto</summary>
  public static partial class ProtoC2WSReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto_C2WS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoC2WSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBQcm90b19DMldTLnByb3RvEhFISEZyYW1ld29yay5Qcm90bxoSUHJvdG9f",
            "Q29tbW9uLnByb3RvIj8KD0MyV1NfQ3JlYXRlUm9sZRINCgVKb2JJZBgBIAEo",
            "BRILCgNTZXgYAiABKAUSEAoITmlja05hbWUYAyABKAkiEgoQQzJXU19HZXRS",
            "b2xlTGlzdCIgCg5DMldTX0VudGVyR2FtZRIOCgZSb2xlSWQYASABKAMioAEK",
            "DkMyV1NfQ2hhdF9EYXRhEi8KB0NoYW5uZWwYASABKA4yHi5ISEZyYW1ld29y",
            "ay5Qcm90by5DaGF0Q2hhbm5lbBIOCgZSb2xlSWQYAiABKAMSDQoFTGV2ZWwY",
            "AyABKAUSEAoITmlja05hbWUYBCABKAkSDQoFSm9iSWQYBSABKAUSDAoESGVh",
            "ZBgGIAEoCRIPCgdDb250ZW50GAcgASgJIkYKEEMyV1NfU2VuZENoYXRNc2cS",
            "MgoHQ2hhdE1zZxgBIAEoCzIhLkhIRnJhbWV3b3JrLlByb3RvLkMyV1NfQ2hh",
            "dF9EYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HHFramework.Proto.ProtoCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HHFramework.Proto.C2WS_CreateRole), global::HHFramework.Proto.C2WS_CreateRole.Parser, new[]{ "JobId", "Sex", "NickName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HHFramework.Proto.C2WS_GetRoleList), global::HHFramework.Proto.C2WS_GetRoleList.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HHFramework.Proto.C2WS_EnterGame), global::HHFramework.Proto.C2WS_EnterGame.Parser, new[]{ "RoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HHFramework.Proto.C2WS_Chat_Data), global::HHFramework.Proto.C2WS_Chat_Data.Parser, new[]{ "Channel", "RoleId", "Level", "NickName", "JobId", "Head", "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HHFramework.Proto.C2WS_SendChatMsg), global::HHFramework.Proto.C2WS_SendChatMsg.Parser, new[]{ "ChatMsg" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///玩家向服务器发送创建角色消息
  /// </summary>
  public sealed partial class C2WS_CreateRole : HHFramework.IProto, pb::IMessage<C2WS_CreateRole> {
    private static readonly pb::MessageParser<C2WS_CreateRole> _parser = new pb::MessageParser<C2WS_CreateRole>(() => new C2WS_CreateRole());
    public ushort ProtoId => ProtoIdDefine.Proto_C2WS_CreateRole;
    public string ProtoEnName => "C2WS_CreateRole";
    public ProtoCategory Category => ProtoCategory.Client2WorldServer;
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2WS_CreateRole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HHFramework.Proto.ProtoC2WSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_CreateRole() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_CreateRole(C2WS_CreateRole other) : this() {
      jobId_ = other.jobId_;
      sex_ = other.sex_;
      nickName_ = other.nickName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_CreateRole Clone() {
      return new C2WS_CreateRole(this);
    }

    /// <summary>Field number for the "JobId" field.</summary>
    public const int JobIdFieldNumber = 1;
    private int jobId_;
    /// <summary>
    ///职业编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JobId {
      get { return jobId_; }
      set {
        jobId_ = value;
      }
    }

    /// <summary>Field number for the "Sex" field.</summary>
    public const int SexFieldNumber = 2;
    private int sex_;
    /// <summary>
    ///性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "NickName" field.</summary>
    public const int NickNameFieldNumber = 3;
    private string nickName_ = "";
    /// <summary>
    ///昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as C2WS_CreateRole);
    }

    public bool Equals(C2WS_CreateRole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobId != other.JobId) return false;
      if (Sex != other.Sex) return false;
      if (NickName != other.NickName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    public override int GetHashCode() {
      int hash = 1;
      if (JobId != 0) hash ^= JobId.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (JobId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(JobId);
      }
      if (Sex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sex);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NickName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (JobId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JobId);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    public void MergeFrom(C2WS_CreateRole other) {
      if (other == null) {
        return;
      }
      if (other.JobId != 0) {
        JobId = other.JobId;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JobId = input.ReadInt32();
            break;
          }
          case 16: {
            Sex = input.ReadInt32();
            break;
          }
          case 26: {
            NickName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家向服务器发送查询已有角色消息
  /// </summary>
  public sealed partial class C2WS_GetRoleList : HHFramework.IProto, pb::IMessage<C2WS_GetRoleList> {
    private static readonly pb::MessageParser<C2WS_GetRoleList> _parser = new pb::MessageParser<C2WS_GetRoleList>(() => new C2WS_GetRoleList());
    public ushort ProtoId => ProtoIdDefine.Proto_C2WS_GetRoleList;
    public string ProtoEnName => "C2WS_GetRoleList";
    public ProtoCategory Category => ProtoCategory.Client2WorldServer;
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2WS_GetRoleList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HHFramework.Proto.ProtoC2WSReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_GetRoleList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_GetRoleList(C2WS_GetRoleList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_GetRoleList Clone() {
      return new C2WS_GetRoleList(this);
    }

    public override bool Equals(object other) {
      return Equals(other as C2WS_GetRoleList);
    }

    public bool Equals(C2WS_GetRoleList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    public void MergeFrom(C2WS_GetRoleList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///玩家向服务器发送进入游戏消息
  /// </summary>
  public sealed partial class C2WS_EnterGame : HHFramework.IProto, pb::IMessage<C2WS_EnterGame> {
    private static readonly pb::MessageParser<C2WS_EnterGame> _parser = new pb::MessageParser<C2WS_EnterGame>(() => new C2WS_EnterGame());
    public ushort ProtoId => ProtoIdDefine.Proto_C2WS_EnterGame;
    public string ProtoEnName => "C2WS_EnterGame";
    public ProtoCategory Category => ProtoCategory.Client2WorldServer;
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2WS_EnterGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HHFramework.Proto.ProtoC2WSReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_EnterGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_EnterGame(C2WS_EnterGame other) : this() {
      roleId_ = other.roleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_EnterGame Clone() {
      return new C2WS_EnterGame(this);
    }

    /// <summary>Field number for the "RoleId" field.</summary>
    public const int RoleIdFieldNumber = 1;
    private long roleId_;
    /// <summary>
    ///角色编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as C2WS_EnterGame);
    }

    public bool Equals(C2WS_EnterGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleId != other.RoleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    public override int GetHashCode() {
      int hash = 1;
      if (RoleId != 0L) hash ^= RoleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (RoleId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (RoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    public void MergeFrom(C2WS_EnterGame other) {
      if (other == null) {
        return;
      }
      if (other.RoleId != 0L) {
        RoleId = other.RoleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoleId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///聊天消息体
  /// </summary>
  public sealed partial class C2WS_Chat_Data : HHFramework.IProto, pb::IMessage<C2WS_Chat_Data> {
    private static readonly pb::MessageParser<C2WS_Chat_Data> _parser = new pb::MessageParser<C2WS_Chat_Data>(() => new C2WS_Chat_Data());
    public ushort ProtoId => ProtoIdDefine.Proto_C2WS_Chat_Data;
    public string ProtoEnName => "C2WS_Chat_Data";
    public ProtoCategory Category => ProtoCategory.Client2WorldServer;
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2WS_Chat_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HHFramework.Proto.ProtoC2WSReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_Chat_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_Chat_Data(C2WS_Chat_Data other) : this() {
      channel_ = other.channel_;
      roleId_ = other.roleId_;
      level_ = other.level_;
      nickName_ = other.nickName_;
      jobId_ = other.jobId_;
      head_ = other.head_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_Chat_Data Clone() {
      return new C2WS_Chat_Data(this);
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private global::HHFramework.Proto.ChatChannel channel_ = global::HHFramework.Proto.ChatChannel.Sys;
    /// <summary>
    ///频道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HHFramework.Proto.ChatChannel Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "RoleId" field.</summary>
    public const int RoleIdFieldNumber = 2;
    private long roleId_;
    /// <summary>
    ///角色编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    /// <summary>
    ///等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "NickName" field.</summary>
    public const int NickNameFieldNumber = 4;
    private string nickName_ = "";
    /// <summary>
    ///昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobId" field.</summary>
    public const int JobIdFieldNumber = 5;
    private int jobId_;
    /// <summary>
    ///职业编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JobId {
      get { return jobId_; }
      set {
        jobId_ = value;
      }
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 6;
    private string head_ = "";
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Head {
      get { return head_; }
      set {
        head_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 7;
    private string content_ = "";
    /// <summary>
    ///聊天内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as C2WS_Chat_Data);
    }

    public bool Equals(C2WS_Chat_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (RoleId != other.RoleId) return false;
      if (Level != other.Level) return false;
      if (NickName != other.NickName) return false;
      if (JobId != other.JobId) return false;
      if (Head != other.Head) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Channel != global::HHFramework.Proto.ChatChannel.Sys) hash ^= Channel.GetHashCode();
      if (RoleId != 0L) hash ^= RoleId.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (JobId != 0) hash ^= JobId.GetHashCode();
      if (Head.Length != 0) hash ^= Head.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != global::HHFramework.Proto.ChatChannel.Sys) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Channel);
      }
      if (RoleId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoleId);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NickName);
      }
      if (JobId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(JobId);
      }
      if (Head.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Head);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Channel != global::HHFramework.Proto.ChatChannel.Sys) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Channel);
      }
      if (RoleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoleId);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (JobId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JobId);
      }
      if (Head.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Head);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    public void MergeFrom(C2WS_Chat_Data other) {
      if (other == null) {
        return;
      }
      if (other.Channel != global::HHFramework.Proto.ChatChannel.Sys) {
        Channel = other.Channel;
      }
      if (other.RoleId != 0L) {
        RoleId = other.RoleId;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.JobId != 0) {
        JobId = other.JobId;
      }
      if (other.Head.Length != 0) {
        Head = other.Head;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = (global::HHFramework.Proto.ChatChannel) input.ReadEnum();
            break;
          }
          case 16: {
            RoleId = input.ReadInt64();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 34: {
            NickName = input.ReadString();
            break;
          }
          case 40: {
            JobId = input.ReadInt32();
            break;
          }
          case 50: {
            Head = input.ReadString();
            break;
          }
          case 58: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家向服务器发送聊天游戏消息
  /// </summary>
  public sealed partial class C2WS_SendChatMsg : HHFramework.IProto, pb::IMessage<C2WS_SendChatMsg> {
    private static readonly pb::MessageParser<C2WS_SendChatMsg> _parser = new pb::MessageParser<C2WS_SendChatMsg>(() => new C2WS_SendChatMsg());
    public ushort ProtoId => ProtoIdDefine.Proto_C2WS_SendChatMsg;
    public string ProtoEnName => "C2WS_SendChatMsg";
    public ProtoCategory Category => ProtoCategory.Client2WorldServer;
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2WS_SendChatMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HHFramework.Proto.ProtoC2WSReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_SendChatMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_SendChatMsg(C2WS_SendChatMsg other) : this() {
      chatMsg_ = other.chatMsg_ != null ? other.chatMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2WS_SendChatMsg Clone() {
      return new C2WS_SendChatMsg(this);
    }

    /// <summary>Field number for the "ChatMsg" field.</summary>
    public const int ChatMsgFieldNumber = 1;
    private global::HHFramework.Proto.C2WS_Chat_Data chatMsg_;
    /// <summary>
    ///聊天内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HHFramework.Proto.C2WS_Chat_Data ChatMsg {
      get { return chatMsg_; }
      set {
        chatMsg_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as C2WS_SendChatMsg);
    }

    public bool Equals(C2WS_SendChatMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatMsg, other.ChatMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    public override int GetHashCode() {
      int hash = 1;
      if (chatMsg_ != null) hash ^= ChatMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (chatMsg_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (chatMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    public void MergeFrom(C2WS_SendChatMsg other) {
      if (other == null) {
        return;
      }
      if (other.chatMsg_ != null) {
        if (chatMsg_ == null) {
          ChatMsg = new global::HHFramework.Proto.C2WS_Chat_Data();
        }
        ChatMsg.MergeFrom(other.ChatMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (chatMsg_ == null) {
              ChatMsg = new global::HHFramework.Proto.C2WS_Chat_Data();
            }
            input.ReadMessage(ChatMsg);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
